package app.smarthome.zzd.smarthome.view;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.DashPathEffect;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PathEffect;
import android.util.AttributeSet;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.RotateAnimation;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import app.smarthome.zzd.smarthome.AppCache;
import app.smarthome.zzd.smarthome.Config;
import app.smarthome.zzd.smarthome.R;
import app.smarthome.zzd.smarthome.model.DeviceInfo;
import app.smarthome.zzd.smarthome.model.SceneInfo;
import app.smarthome.zzd.smarthome.model.TimerInfo;

/**
 * Created by inobaa on 15/1/30.
 */
public class GridIconScene extends RelativeLayout {

    ImageView       mImgAvatar;
    ImageView       mImgRightUp;

    TextView        mTxtTitle;
    int             mFillColor;

    public GridIconScene(Context context) {
        super(context);
    }

    public GridIconScene(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public GridIconScene(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
    }

    public void Init(TimerInfo t, boolean isOnControl){
        SceneInfo s = AppCache.mScenes.get(t.mSceneId);
        Init(s, isOnControl);
    }
    public void Init(SceneInfo s, boolean isOnControl){

        mTxtTitle = ((TextView)(findViewById(R.id.txt_title)));
        mTxtTitle.setText(s.mName);

        mImgAvatar = ((ImageView)(findViewById(R.id.img_main)));

        String strTmp = s.mIcon.toLowerCase();
        int iColorIdx = 0;
        int iImgIdx = 0;
        if (strTmp.length() > 0){
            iColorIdx = (strTmp.charAt(0) - 'a') % 4;
        }
        if (strTmp.length() > 1){
            iImgIdx = (strTmp.charAt(1) - 'a') % 4;
        }
        switch (iColorIdx){
            case 0: mFillColor = getResources().getColor(R.color.bg_scene_1); break;
            case 1: mFillColor = getResources().getColor(R.color.bg_scene_2); break;
            case 2: mFillColor = getResources().getColor(R.color.bg_scene_3); break;
            case 3:
            default: mFillColor = getResources().getColor(R.color.bg_scene_4); break;
        }
        switch (iImgIdx){
            case 0: mImgAvatar.setImageResource(R.drawable.scene_back_home); break;
            case 1: mImgAvatar.setImageResource(R.drawable.scene_curtain); break;
            case 2: mImgAvatar.setImageResource(R.drawable.scene_go_bed); break;
            case 3:
            default: mImgAvatar.setImageResource(R.drawable.scene_repast); break;
        }

        mImgRightUp = ((ImageView)(findViewById(R.id.img_right_up)));
        if (isOnControl){
            mImgRightUp.setVisibility(View.VISIBLE);
            RotateAnimation ra = (RotateAnimation) mImgRightUp.getTag();
            if (ra == null){
                ra = new RotateAnimation(0, 360
                        , Animation.RELATIVE_TO_SELF, 0.5f,Animation.RELATIVE_TO_SELF,0.5f);
                ra.setDuration(2500);
                ra.setRepeatMode(Animation.RESTART);
                ra.setRepeatCount(999999);
                mImgRightUp.setTag(ra);
                mImgRightUp.startAnimation(ra);
            }
        }
        else{
            mImgRightUp.setVisibility(View.GONE);
            Animation ra = (Animation) mImgRightUp.getTag();
            if (ra != null){
                ra.cancel();
                mImgRightUp.setTag(null);
            }
        }
    }
    @Override
    protected void onDraw(Canvas canvas) {
        float x = mImgAvatar.getX() + mImgAvatar.getWidth() / 2;
        float y = mImgAvatar.getY() + mImgAvatar.getHeight() / 2;
//        float w = this.getWidth();
//        float h = this.getHeight();

        // 首先定义一个paint
        Paint paint = new Paint();
        paint.setColor(mFillColor);
        paint.setStrokeWidth(0);
        paint.setStyle(Paint.Style.FILL);
        paint.setAntiAlias(true);

        canvas.drawCircle(x, y, 48, paint);

//        PathEffect effect = new DashPathEffect(new float[] { 3, 3, 3, 3}, 1);
//        paint.setPathEffect(effect);
//
//        Path path = new Path();
//
//        canvas.drawPath(path, paint);

        super.onDraw(canvas);
    }
}
