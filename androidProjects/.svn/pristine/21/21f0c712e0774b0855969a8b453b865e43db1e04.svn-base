package app.smarthome.zzd.smarthome;

import android.app.AlertDialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;
import com.umeng.analytics.MobclickAgent;
import com.umeng.fb.FeedbackAgent;
import com.umeng.update.UmengUpdateAgent;
import com.umeng.update.UmengUpdateListener;
import com.umeng.update.UpdateResponse;
import com.umeng.update.UpdateStatus;
import com.util.Common;

/**
 * Created by inobaa on 15/1/20.
 */
public class FragmentProfile extends FragmentForMain {

    public static final int KActivityResultFamilyMng = 101;
    public static final int KActivityResultRoomMng = 102;

    LinearLayout mRootView;
    ImageView   mImgAvatar;
    TextView    mTxtFamily;
    TextView    mTextUserName;

    public FragmentProfile() {
    }
    public void onResume() {
        super.onResume();
        MobclickAgent.onPageStart("FragmentProfile"); //统计页面
    }
    public void onPause() {
        super.onPause();
        MobclickAgent.onPageEnd("FragmentProfile");
    }


    private BroadcastReceiver mReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();
            if (action.equals(Config.BoardcastZzdMyInfoUpdated)
                    ||action.equals(Config.BoardcastZzdLogined)
                    ||action.equals(Config.BoardcastZzdChangeFamily)
                    ||action.equals(Config.BoardcastZzdFamiliesUpdate)) {
                OnMyInfoUpdated();
            }
        }
    };
    void UpdateAvatar(String url){
        if (!Common.isNullString(url)) {

            AppCache.LoadRoundImage(url, mImgAvatar);

//            ImageLoader.getInstance().loadImage(url, new ImageLoadingListener() {
//                @Override
//                public void onLoadingStarted(String s, View view) {
//                }
//                @Override
//                public void onLoadingFailed(String s, View view, FailReason failReason) {
//                }
//                @Override
//                public void onLoadingComplete(String s, View view, Bitmap bitmap) {
//                    RoundedBitmapDisplayer.RoundedDrawable drawable = new RoundedBitmapDisplayer.RoundedDrawable(bitmap, 10, 1);
//                    mImgAvatar.setImageDrawable(drawable);
//                }
//                @Override
//                public void onLoadingCancelled(String s, View view) {
//                }
//            });
        }
        else{
            Drawable mDefaultAvatar = new RoundedBitmapDisplayer.RoundedDrawable(BitmapFactory.decodeResource(getActivity().getResources(), R.drawable.avatar), 0, 1);
            mImgAvatar.setImageDrawable(mDefaultAvatar);
        }
    }
    void OnMyInfoUpdated(){
        if (AppCache.mCurFamilyId > 0) {
            mTxtFamily.setText(AppCache.CurrentFamilyName());
        }

        if(!Common.isNullString(AppCache.mMyself.mAvatar)) UpdateAvatar(AppCache.mMyself.mAvatar);

        mTextUserName.setText(AppCache.mMyself.mName);
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        mRootView = (LinearLayout)super.onCreateView(inflater, container, savedInstanceState, R.layout.fragment_profile);
        mRootView.findViewById(R.id.ly_header).setBackgroundColor(getResources().getColor(R.color.transparent));
        mTxtHeaderTitle.setText(R.string.title_me);
        mBtnHeaderLeft.setVisibility(View.INVISIBLE);
        mBtnHeaderLeft.setImageResource(R.drawable.profile_message);
        mBtnHeaderRight.setVisibility(View.INVISIBLE);
        mBtnHeaderRight.setImageResource(R.drawable.profile_share);

        ImageView ivBgHeader = ((ImageView)(mRootView.findViewById(R.id.img_bg)));
        ivBgHeader.setAlpha(0.035f);

        mTxtFamily = ((TextView)(mRootView.findViewById(R.id.txt_logined_family)));
        mImgAvatar = ((ImageView)(mRootView.findViewById(R.id.img_main)));
        mTextUserName = (TextView) mRootView.findViewById(R.id.txt_username);

        mRootView.findViewById(R.id.ly_family_manage).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setClass(getActivity(), ActivityFamilyList.class);
                startActivityForResult(intent, KActivityResultFamilyMng);
            }
        });
        mRootView.findViewById(R.id.ly_room_manage).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setClass(getActivity(), ActivityRoomList.class);
                startActivityForResult(intent, KActivityResultRoomMng);
            }
        });
        //退出登录
        mRootView.findViewById(R.id.txt_logout).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                new AlertDialog.Builder(getActivity())
//                        .setTitle(strTitle)
                        .setTitle(getString(R.string.tip_confirm_logout))
                        .setPositiveButton(getString(R.string.action_ok), new DialogInterface.OnClickListener() {
                            public void onClick(DialogInterface dialog, int which) {
                                ServerClient.Signout(new AppResponseHandler());
                                AppCache.OnLogouted();
                            }
                        })
                        .setNegativeButton(getString(R.string.action_cancel), null)
                        .show();
                return;
            }
        });
        //家庭切换
        mRootView.findViewById(R.id.ly_avatar).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
//                OnClickAvatar();
            }
        });
        //账户管理
        mRootView.findViewById(R.id.ly_account_manage).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Intent i = new Intent();
                i.setClass(getActivity(),ActivityAccoutManage.class);
                startActivity(i);
            }
        });
        //网关管理
        mRootView.findViewById(R.id.ly_gateway_manage).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Intent i = new Intent();
                i.setClass(getActivity(), ActivityGatewayList.class);
                startActivity(i);
            }
        });
        //网管手动校时
        mRootView.findViewById(R.id.ly_gateway_set_time).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
            }
        });
        //版本更新
        mRootView.findViewById(R.id.ly_check_update).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                UmengUpdateAgent.setUpdateAutoPopup(false);
                UmengUpdateAgent.setUpdateOnlyWifi(false);
                UmengUpdateAgent.setUpdateListener(new UmengUpdateListener() {
                    @Override
                    public void onUpdateReturned(int updateStatus, UpdateResponse updateInfo) {
                        switch (updateStatus) {
                            case UpdateStatus.Yes: // has update
                                UmengUpdateAgent.showUpdateDialog(getActivity(), updateInfo);
                                break;
                            case UpdateStatus.No: // has no update
                                AppInstance.MakeToast(getActivity(), getString(R.string.check_update_no_update), Toast.LENGTH_SHORT).show();
                                break;
                            case UpdateStatus.Timeout: // time out
                                AppInstance.MakeToast(getActivity(), getString(R.string.check_update_timeout), Toast.LENGTH_SHORT).show();
                                break;
                        }
                    }
                });
                UmengUpdateAgent.update(getActivity());
            }
        });

        //电话
        mRootView.findViewById(R.id.ly_service_phone).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                String number = getString(R.string.about_phone_number);
                Intent phoneIntent = new Intent("android.intent.action.CALL", Uri.parse("tel:" + number));
                startActivity(phoneIntent);
            }
        });
        //交互反馈
        mRootView.findViewById(R.id.ly_feedback).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                FeedbackAgent agent = new FeedbackAgent(getActivity());
                agent.startFeedbackActivity();
            }
        });
        //关于
        mRootView.findViewById(R.id.ly_about).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Intent i = new Intent();
                i.setClass(getActivity(),ActivityAbout.class);
                startActivity(i);
            }
        });

        try{
            String str = getActivity().getPackageManager().getPackageInfo("app.smarthome.zzd.smarthome", 0).versionName;
            String strVer = String.format(getString(R.string.cur_version_fmt), str);
            ((TextView)(mRootView.findViewById(R.id.txt_version))).setText(strVer);
        }catch (PackageManager.NameNotFoundException e){
        }


        OnMyInfoUpdated();

        IntentFilter filter = new IntentFilter();
        filter.addAction(Config.BoardcastZzdChangeFamily);
        filter.addAction(Config.BoardcastZzdFamiliesUpdate);
        filter.addAction(Config.BoardcastZzdLogined);
        filter.addAction(Config.BoardcastZzdLogouted);
        filter.addAction(Config.BoardcastZzdMyInfoUpdated);
        getActivity().registerReceiver(mReceiver, filter);
        return mRootView;
    }
    public void onDestroy() {
        getActivity().unregisterReceiver(mReceiver);
        super.onDestroy();
    }

}