package app.smarthome.zzd.smarthome.view;

import android.annotation.TargetApi;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.os.Build;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Vector;

import app.smarthome.zzd.smarthome.AppCache;
import app.smarthome.zzd.smarthome.R;
import app.smarthome.zzd.smarthome.model.AdbannerInfo;
import app.smarthome.zzd.smarthome.model.RoomInfo;

/**
 * Created by inobaa on 15/1/30.
 */
public class AdbannerView extends ViewPager {

    public class MyViewPagerAdapter extends PagerAdapter {

        List<View> mViewLists = new ArrayList();

        public MyViewPagerAdapter()
        {
        }

        @Override
        public int getCount() {                                                                 //获得size
            // TODO Auto-generated method stub
            return mViewLists.size();
        }

        @Override
        public boolean isViewFromObject(View arg0, Object arg1) {
            // TODO Auto-generated method stub
            return arg0 == arg1;
        }

        @Override
        public void destroyItem(View view, int position, Object object)                       //销毁Item
        {
            ((ViewPager) view).removeView(mViewLists.get(position));
        }

        @Override
        public Object instantiateItem(View view, int position)                                //实例化Item
        {
            ((ViewPager) view).addView(mViewLists.get(position), 0);

            return mViewLists.get(position);
        }

    }

    Vector<AdbannerInfo> mVecAdData = new Vector<>();
    MyViewPagerAdapter  mAdapter = new MyViewPagerAdapter();


    public AdbannerView(Context context) {
        super(context);
    }

    public AdbannerView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public void ReLoad(LayoutInflater inflater, int viewId){

        mVecAdData.clear();
        for (AdbannerInfo d : AppCache.mAdBannerData.values()){
            if (d.mId != viewId) continue;
            mVecAdData.add(d);
        }
        Collections.sort(mVecAdData, new Comparator<AdbannerInfo>() {
            @Override
            public int compare(AdbannerInfo t0, AdbannerInfo t1) {
                return (int)(t0.mId - t1.mId);
            }
        });

        mAdapter.mViewLists.clear();
        for (AdbannerInfo r : mVecAdData) {
            AdbannerViewItem roomBtn = (AdbannerViewItem) inflater.inflate(R.layout.li_ad_view, null);
            mAdapter.mViewLists.add(roomBtn);
            roomBtn.Init(r);
        }
        mAdapter.notifyDataSetChanged();
    }
    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
    }
}
