package app.smarthome.zzd.smarthome.view;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.View;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;
import com.util.Common;

import org.json.JSONException;
import org.json.JSONObject;

import app.smarthome.zzd.smarthome.R;

/**
 * Created by inobaa on 15/1/30.
 */
public class ListItemMessageInfo extends RelativeLayout{

    static Drawable mDefaultAvatar;

    ImageView mImgAvatar;

    TextView mTxtTitle;
    TextView mTxtSubTitle;
    TextView mTxtTime;

    String   mStrUrl;

    public ListItemMessageInfo(Context context) {
        super(context);
    }

    public ListItemMessageInfo(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public ListItemMessageInfo(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
    }

    public void SetMessageInfo(JSONObject dyi){

        mTxtTitle = ((TextView)(findViewById(R.id.txt_title)));
        mTxtTime = ((TextView)(findViewById(R.id.txt_time)));
        mImgAvatar = ((ImageView)(findViewById(R.id.img_main)));

        String strImage = null;
        try {
            if (dyi.has("image"))strImage = dyi.getString("image");
            if (dyi.has("url"))mStrUrl = dyi.getString("url");

            if (dyi.has("title"))mTxtTitle.setText(dyi.getString("title"));
            if (dyi.has("message"))mTxtSubTitle.setText(dyi.getString("message"));

            long created = 0L;
            if (dyi.has("created")){
                created = dyi.getLong("created");
//                Date date = new Date(created);
                mTxtTime.setText(Common.getTimeStringMDHM(created));
            }
        }
        catch (JSONException e){

        }

        if (strImage != null && strImage.length() > 0) {
            ImageLoader.getInstance().loadImage(strImage, new ImageLoadingListener() {
                @Override
                public void onLoadingStarted(String s, View view) {

                }

                @Override
                public void onLoadingFailed(String s, View view, FailReason failReason) {

                }

                @Override
                public void onLoadingComplete(String s, View view, Bitmap bitmap) {
                    RoundedBitmapDisplayer.RoundedDrawable drawable = new RoundedBitmapDisplayer.RoundedDrawable(bitmap, 10, 1);
                    mImgAvatar.setImageDrawable(drawable);
                }

                @Override
                public void onLoadingCancelled(String s, View view) {

                }
            });
        }
        else{
            if (mDefaultAvatar == null){
                mDefaultAvatar = new RoundedBitmapDisplayer.RoundedDrawable(BitmapFactory.decodeResource(getContext().getResources(), R.drawable.avatar), 10, 1);
            }
            mImgAvatar.setImageDrawable(mDefaultAvatar);
        }
    }
    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
    }
}
